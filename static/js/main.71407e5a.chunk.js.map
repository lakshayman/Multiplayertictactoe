{"version":3,"sources":["storage/storage.js","components/board-box/board-box.jsx","utils/functions.js","components/Text Container/TextContainer.jsx","components/board/board.jsx","components/scoreboard/scoreboard.jsx","index.jsx"],"names":["Storage","storageName","initialValue","this","localStorage","getItem","setItem","JSON","parse","data","stringify","Box","props","className","onClick","value","findWinner","boxes","choice","name","opponentName","k","rows","i","length","a","b","c","console","log","areAllBoxesClicked","count","forEach","item","TextContainer","users","map","Board","setName","nname","setState","setRoom","nroom","room","storage","handleBoardRestart","Array","fill","history","xIsNext","state","isMyTurn","opponent","isGameEnded","queryString","location","search","socket","io","connect","emit","error","window","href","alert","on","winner","index","slice","utils","push","id","status","isFilled","update","handleBoxClick","move","React","Component","Scoreboard","scoreboard","getData","placeholder","type","onChange","event","target","e","preventDefault","to","leader","key","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71407e5a.chunk.js","sourcesContent":["export class Storage {\r\n    constructor(storageName = 'gameScoreboard', initialValue = []) {\r\n      this.storageName = storageName\r\n      if (!localStorage.getItem(storageName)) {\r\n        localStorage.setItem(storageName, initialValue)\r\n      }\r\n    }\r\n    getData() {\r\n      return JSON.parse(localStorage.getItem(this.storageName))\r\n    }\r\n    update(data) {\r\n      localStorage.setItem(this.storageName, JSON.stringify(data))\r\n    }\r\n  }","import React from 'react';\r\nimport './box.css';\r\nexport const Box = (props) => {\r\n    return (\r\n        <button className='board__box' onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}","export function findWinner(boxes, choice, name, opponentName){\r\n    let k = ''\r\n    const rows = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6]\r\n    ]\r\n    for(let i=0; i < rows.length;i++){\r\n        const [a, b, c] = rows[i];\r\n        console.log([a, b, c]);\r\n        if (boxes[a] && boxes[a] === boxes[b] && boxes[a] === boxes[c]) {\r\n            k = boxes[a];\r\n        }\r\n    }\r\n    if(k === '')\r\n        return null;\r\n    else{\r\n        if(choice === k){\r\n            return name;\r\n        }else{\r\n            return opponentName;\r\n        }\r\n    } \r\n        \r\n}\r\nexport function areAllBoxesClicked(boxes){\r\n    let count = 0\r\n    boxes.forEach(function (item){\r\n        if(item != null){\r\n            count++\r\n        }\r\n    })\r\n    if(count === 9){\r\n        return true\r\n    }else{\r\n        return false\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\n//import './TextContainer.css';\r\n\r\nconst TextContainer = ({ users }) => (\r\n  <div className=\"textContainer\">\r\n    <div>\r\n    </div>\r\n    {\r\n      users\r\n        ? (\r\n          <div>\r\n            <h1>People currently chatting:</h1>\r\n            <div className=\"activeContainer\">\r\n              <h2>\r\n                {users.map(({name}) => (\r\n                  <div key={name} className=\"activeItem\">\r\n                    {name}\r\n                    \r\n                  </div>\r\n                ))}\r\n              </h2>\r\n            </div>\r\n          </div>\r\n        )\r\n        : null\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default TextContainer;","import React from 'react';\r\nimport { Storage } from './../../storage/storage.js';\r\nimport { Box } from './../board-box/board-box';\r\nimport * as utils from '../../utils/functions.js';\r\nimport io from 'socket.io-client';\r\nimport queryString from 'query-string';\r\nimport TextContainer from '../Text Container/TextContainer';\r\nimport './board.css'\r\nimport '../board-box/box.css'\r\nimport '../buttons.css'\r\nexport class Board extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        let socket;\r\n        let winner = null;\r\n        this.state = {\r\n            users: [],\r\n            name: '',\r\n            room: '',\r\n            boxes: Array(9).fill(null),\r\n            history: [],\r\n            choice: 'X',\r\n            isMyTurn: false,\r\n            opponent: null,\r\n            isGameEnded: false\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    setName = (nname) => {\r\n        this.setState({\r\n            name: nname\r\n        })\r\n    }\r\n    setRoom = (nroom) => {\r\n        this.setState({\r\n            room: nroom\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const ENDPOINT = 'https://intense-fjord-58803.herokuapp.com/'\r\n        var connectionOptions =  {\r\n            \"force new connection\" : true,\r\n            \"reconnectionAttempts\": \"Infinity\", \r\n            \"timeout\" : 10000,                  \r\n            \"transports\" : [\"websocket\"]\r\n          };\r\n          const { name, room } = queryString.parse(this.props.location.search);\r\n      \r\n          this.socket = io.connect(ENDPOINT, connectionOptions);\r\n      \r\n          this.setRoom(room);\r\n          this.setName(name)\r\n      \r\n          this.socket.emit('join', { name, room }, (error) => {\r\n            if(error) {\r\n              window.location.href = \"/\";\r\n              alert(error);\r\n            }\r\n          });\r\n\r\n          this.socket.on('opponent', ({ opponent, isMyTurn, choice }) => {\r\n              this.setState({\r\n                  opponent: opponent,\r\n                  isMyTurn: isMyTurn,\r\n                  choice: choice\r\n              })\r\n          });\r\n\r\n          this.socket.on('turn', ({boxes, history}) => {\r\n              this.setState({\r\n                  boxes: boxes,\r\n                  history: history,\r\n                  isMyTurn: !this.state.isMyTurn\r\n              })\r\n          });\r\n\r\n          this.socket.on('winner', () => {\r\n              this.winner = this.state.name;\r\n          });\r\n\r\n          this.socket.on(\"roomData\", ({ users }) => {\r\n            this.setState({\r\n                users: users\r\n            })\r\n          });\r\n\r\n    };\r\n\r\n    storage = new Storage()\r\n\r\n    handleBoxClick(index){\r\n        const boxes = this.state.boxes.slice()\r\n        let history = this.state.history\r\n\r\n        if(!this.state.isMyTurn){\r\n            return\r\n        }\r\n\r\n        if(utils.findWinner(boxes) || boxes[index]){\r\n            return\r\n        }\r\n        if(utils.areAllBoxesClicked(boxes) === true){\r\n            return\r\n        }\r\n        boxes[index] = this.state.choice\r\n        history.push(this.state.choice)\r\n        this.socket.emit('turn',({boxes: boxes, history: history, id: this.state.opponent.id}));\r\n        this.setState({\r\n            boxes: boxes,\r\n            history: history,\r\n            isMyTurn: !this.state.isMyTurn\r\n        })\r\n    }\r\n    handleBoardRestart = () => {\r\n        this.setState({\r\n            boxes: Array(9).fill(null),\r\n            history: [],\r\n            xIsNext: true\r\n        })\r\n    }\r\n    render(){\r\n        this.winner = utils.findWinner(this.state.boxes, this.state.choice, this.state.name, this.state.opponent ? this.state.opponent.name : '')\r\n        const isFilled = utils.areAllBoxesClicked(this.state.boxes)\r\n        console.log([this.winner, isFilled])\r\n        let status\r\n        if(!this.state.opponent){\r\n            status = 'Waiting For Opponent ...'\r\n        }\r\n        else if(this.winner){\r\n            status = `The Winner is ${this.winner}`\r\n            this.storage.update([`${this.winner} won`])\r\n        }else if(!this.winner && isFilled){\r\n            status = 'Game Drawn'\r\n            this.storage.update(['Game Drawn'])\r\n        }else{\r\n            status = `It is ${this.state.isMyTurn ? this.state.name : this.state.opponent.name}'s turn.`\r\n        }\r\n        return(\r\n            <>\r\n                <a href=\"/Multiplayertictactoe\">Go back to scoreboard</a>\r\n                <div className=\"board-wrapper\">\r\n                <div className=\"board\">\r\n                        <h2 className=\"board-heading\">{status}</h2>\r\n\r\n                        <div className=\"board-row\">\r\n                            <Box value={this.state.boxes[0]} onClick={() => this.handleBoxClick(0)} />\r\n                            <Box value={this.state.boxes[1]} onClick={() => this.handleBoxClick(1)} />\r\n                            <Box value={this.state.boxes[2]} onClick={() => this.handleBoxClick(2)} />\r\n                        </div>\r\n\r\n                        <div className=\"board-row\">\r\n                            <Box value={this.state.boxes[3]} onClick={() => this.handleBoxClick(3)} />\r\n                            <Box value={this.state.boxes[4]} onClick={() => this.handleBoxClick(4)} />\r\n                            <Box value={this.state.boxes[5]} onClick={() => this.handleBoxClick(5)} />\r\n                        </div>\r\n\r\n                        <div className=\"board-row\">\r\n                            <Box value={this.state.boxes[6]} onClick={() => this.handleBoxClick(6)} />\r\n                            <Box value={this.state.boxes[7]} onClick={() => this.handleBoxClick(7)} />\r\n                            <Box value={this.state.boxes[8]} onClick={() => this.handleBoxClick(8)} />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"board-history\">\r\n                        <h2 className=\"board-heading\">Moves history:</h2>\r\n                        <ul className=\"board-historyList\">\r\n                            {this.state.history.length === 0 && <span>No moves to show.</span>}\r\n\r\n                            {this.state.history.length !== 0 && this.state.history.map((move, index) => {\r\n                                return <li key={index}>Move {index + 1}: <strong>{move}</strong></li>\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n                <TextContainer users={this.state.users}/>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Storage } from './../../storage/storage';\r\nimport '../board/board.css'\r\nimport '../board-box/box.css'\r\nimport '../buttons.css'\r\nexport class Scoreboard extends React.Component{\r\n    state = {\r\n        scoreboard: [],\r\n        name: '',\r\n        room: ''\r\n    }\r\n    async componentDidMount(){\r\n        let storage = await new Storage().getData()\r\n        this.setState({\r\n            scoreboard: storage\r\n        })\r\n    }\r\n    setName = (nname) => {\r\n        this.setState({\r\n            name: nname\r\n        })\r\n    }\r\n    setRoom = (nroom) => {\r\n        this.setState({\r\n            room: nroom\r\n        })\r\n    }\r\n    render(){\r\n        return (\r\n            <div className='joinOuterContainer'>\r\n                <div className=\"joinInnerContainer\">\r\n                    <h1 className=\"heading\">Tic-Tac-Toe</h1>\r\n                    <div>\r\n                    <input placeholder=\"Name\" className=\"joinInput\" type=\"text\" onChange={(event) => this.setName(event.target.value)} />\r\n                    </div>\r\n                    <div>\r\n                    <input placeholder=\"Room\" className=\"joinInput mt-20\" type=\"text\" onChange={(event) => this.setRoom(event.target.value)} />\r\n                    </div>\r\n                    <Link onClick={e => (!this.state.name || !this.state.room) ? e.preventDefault() : null} to={`/board?name=${this.state.name}&room=${this.state.room}`}>\r\n                    <button className={'button mt-20'} type=\"submit\">Start Game</button>\r\n                    </Link>\r\n                </div>\r\n                <div className='joinInnerContainer'>\r\n                    <h1 className=\"heading\">Recent Games:</h1>\r\n                    <ul>\r\n                        {this.state.scoreboard.map((leader,key) => {\r\n                            return <li className=\"score\" key={key}>{leader}</li>\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route } from 'react-router-dom'\nimport { Board } from './components/board/board'\nimport { Scoreboard } from './components/scoreboard/scoreboard'\n\nimport './components/board/board.css'\nimport './components/board-box/box.css'\nimport './components/buttons.css'\n\nclass App extends React.Component{\n  render(){\n    return (\n      <div className=\"app\">\n        <HashRouter basename=\"/\">\n          <Route exact path=\"/\" component={Scoreboard}/>\n          <Route path=\"/board\" component={Board}/>\n        </HashRouter>\n      </div>\n    )\n  }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}